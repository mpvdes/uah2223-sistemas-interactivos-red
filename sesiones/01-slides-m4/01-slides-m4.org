#+STARTUP: indent
#+STARTUP: overview

:REVEAL_PROPERTIES:
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_THEME: simple
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+OPTIONS: timestamp:nil toc:1 num:nil author:nil date:nil
:END:  

#+TITLE:Introducción Web
#+SUBTITLE: M4.Sistemas Interactivos
#+AUTHOR: Julián Pérez
#+LANGUAGE: es
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+REVEAL_PLUGINS: (highlight CopyCode)
#+REVEAL_HIGHLIGHT_CSS: https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.4.0/styles/base16/espresso.min.css
#+REVEAL_EXTRA_CSS: ../../assets/css/modifications.css
#+REVEAL_EXTRA_CSS: ../../assets/fonts/webfont-iosevka-11.3.0/iosevka.css
#+REVEAL_EXTRA_SCRIPT_SRC: ../../assets/js/custom.js
#+REVEAL_TITLE_SLIDE: <h1 class="title" style="text-transform:uppercase;font-size:2em" >%t</h1><h3 class="subtitle">%s</h3><br><br><h4>%a</h4><br><p>Máster Periodismo y Visualización de Datos</p><p>Universidad de Alcalá</p>
#+OPTIONS: toc:nil

* Índice
  - [[HTML][HTML]]
  - [[CSS][CSS]]
  - [[JavaScript][JavaScript]]
  - [[Manuales / Docs][Manuales / Docs]]
* Resumen
  - Haremos una introducción básica a los elementos que componen una web
  - Para qué sirve cada elemento HTML
  - Cómo se dan estilos a través de CSS
  - Cómo podemos crear tareas o cambiar el comportamiento de los elementos a través de JS
* HTML
:PROPERTIES:
:reveal_background: #e34c26
:END:
- /HTML/ viene de HyperText Markup Language o lenguaje de marcado de hipertexto
- Es el componente más básico de la Web y define el _significado_ y la _estructura_ del contenido web.
- Para la _apariencia_ contamos con /CSS/ y para la _funcionalidad_ con /JavaScript/
#+reveal: split
- Utiliza marcas para etiquetar texto, imágenes y otros contenidos para mostrarlos en un navegador web.
- Estas marcas incluyen elementos especiales como =<head>=, =<title>=, =<body>=, =<header>=, =<footer>=, =<article>=, =<section>=, =<p>=, =<img>=, =<div>=, =<span>=, etc.
** Manejo de archivos
- Es importante que la estructura de los archivos en una carpeta local de tu ordenador sea la misma que después tendrá cuando se aloje en un servidor
- Esta carpeta será la raíz "=/=" de tu web futura
- Es importante mantener la disciplina de escribir en *minúscula y sin espacios* para el nombrado de archivos
- Para separar nombres *utilizamos el guión medio* "=-=" pero no la barra baja "=_="
#+reveal: split:t
#+begin_src bash
mi-proyecto-web/
├── assets
│   ├── css
│   │   ├── custom.css
│   │   └── style.css
│   └── js
│       └── custom.js
├── img
│   └── paisaje.jpg
└── index.html
#+end_src
** Elementos HTML
*** Qué es un elemento HTML?
#+attr_html: :height 200px :display block
#+caption: Partes de un elemento HTML. Fuente: [[https://developer.mozilla.org/es/docs/Learn/Getting_started_with_the_web/HTML_basics][Mozilla]]
https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics/grumpy-cat-small.png

*** Atributo HTML
#+attr_html: :height 100px :display block
#+caption: Atributo del elemento HTML. Fuente: [[https://developer.mozilla.org/es/docs/Learn/Getting_started_with_the_web/HTML_basics][Mozilla]]
https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics/grumpy-cat-attribute-small.png

*** Anidar elementos
#+REVEAL_HTML: <div class="column" style="float:left; width: 45%">
#+begin_src html
  <p>Mi gato es <strong>muy</strong> gruñon.</p>
#+end_src
Bien anidado
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 45%">
#+begin_src html
  <p>Mi gato es <strong>muy gruñon.</p></strong>
#+end_src
Mal Anidado
#+REVEAL_HTML: </div>

*** Elementos vacíos
#+begin_src html
<img src="https://via.placeholder.com/600x500/ff0000" alt="imagen de relleno de color rojo">
#+end_src
*** Elementos en bloque VS en línea
- Los [[https://developer.mozilla.org/es/docs/Web/HTML/Block-level_elements][elementos en bloque]] ocupan todo el espacio del contenedor padre y comienzan nueva línea
#+begin_src html
<p>Este párrafo es un elemento en bloque</p>
#+end_src
- Los [[https://developer.mozilla.org/es/docs/Web/HTML/Inline_elements][elementos en línea]] van en línea del anterior y no comienzan nueva línea
#+begin_src html
<p>Este <span>span</span> es un elemento en línea</p>
#+end_src
*** Identificadores
- Permite identificar un elemento único en una página HTML
- Solo se permite un único elemento por ID
- Sirven para hacer marcadores y saltar a esa parte de la página
- O para dar estilos desde CSS o tareas desde JS a un único elemento
  #+begin_src html
<p id="mi-id">Esta frase tiene un ID único</p>
  #+end_src
*** Elementos no semánticos
**** Elemento en linea =<span>=
- Se utiliza cuando no se nos ocurre el uso de ningún otro elemento semántico de texto en el que incluir el contenido
- O si no se desea añadir ningún significado específico
#+begin_src html
    <p>El carbunco <span class="nota-traductor">(Nota del traductor: erróneamente llamado ántrax)</span> en una enfermedad
      causada por las esporas de una bacteria llamada Bacillus anthracis.</span>
#+end_src
**** Elemento de bloque =<div>=
- Sirve para crear secciones o agrupar contenidos
  #+begin_src html
<div style="color: blue;">
 <h2> Ejemplo de div y span </h2>
  <p>
    Esto es un párrafo dentro de un div,
    <span style="color: red;"> y esto un span dentro de un párrafo.</span>
  </p>
</div>
  #+end_src
** Estructura documento HTML
#+begin_src html
  <!DOCTYPE html>
  <html>
    <head>
      <meta charset="utf-8">
      <title>Mi pagina de prueba</title>
    </head>
    <body>
      <img src="images/firefox-icon.png" alt="Mi imagen de prueba">
    </body>
  </html>
#+end_src
#+reveal: split:t
- src_html[:exports code]{<!DOCTYPE html>} Tipo de documento: HTML
- src_html[:exports code]{<html></html>} Encapsula todo el contenido de la página. Elemento raíz
- src_html[:exports code]{<head></head>} Contenedor de todo caquello que no es contenido visible
- src_html[:exports code]{<meta charset="utf-8">} Juego de caracteres
- src_html[:exports code]{<title></title>} Título de la página
- src_html[:exports code]{<body></body>} El contenido a mostrar a usuarixs
** Marcado de texto
*** Párrafos
- Para párrafos simples de texto =<p>=
- Una vez que tenemos el texto en párrafos y secciones comenzamos con el marcado de texto
#+begin_src html
<p>Este es un simple parrafo</p>
#+end_src
*** Encabezados
- Hay 6 niveles de encabezado que van de =<h1>= a =<h6>=
#+begin_src html
  <h1>Mi título principal</h1>
  <h2>Mi título de nivel superior</h2>
  <h3>Mi subtítulo</h3>
  <h4>Mi sub-subtítulo</h4>
#+end_src
*** Listas
- Hay dos tipos de listas:
  - Ordenadas =<ol>=
  - Desordenadas =<ul>=
- Cada elemento de la lista se especifica con =<li>=
#+begin_src html
  <ul>
    <li>leche</li>
    <li>pan</li>
    <li>huevos</li>
  </ul>

  <ol>
    <li>Margaret Court</li>
    <li>Serena Williams</li>
    <li>Steffi Graf</li>
  </ol>
#+end_src
*** Vínculos
- Los vínculos son los que hacen de la web, la web. Se usan con =<a>= que viene de /anchor/
- Para convertir texto dentro de un párrafo en un vínculo
- Para especificar a dónde va el vínculo se hace con el atributo =href:"url"=
- Es importante indicar el protocolo delante: =http://= o =https://=
#+begin_src html
<p>Encontrarás toda la información sobre el máster <a href="https://mpvd.es">aquí</a></p>
#+end_src
*** Importancia
- =em= realza la /importancia/ del texto que encierra
- =strong= realza la *máxima importancia* del texto que encierra
#+begin_src html
  <p>El concierto de <em>Rock Paradise</em> tendrá lugar el día 24 de enero a las 19:30, será <strong>obligatorio presentar acreditación</strong></p>
#+end_src
*** Cita
- Con =<blockquote>= hacemos una cita textual de otro texto externo
- este elemento puede tener el atributo src_html[:exports code]{cite="url"} para enlazar la fuente
- Podemos indicar la autoría, documento o fuente de la cita con =<cite>=
#+begin_src html
Desde la <cite>OCU</cite> señalan lo siguiente:
<blockquote cite="https://www.ocu.org/fincas-y-casas/glosario-inmobiliario/c/cooperativas-de-vivienda">Ahora mismo hay muy pocos supermercados y los cooperativistas muchas veces participan más por activismo que por conveniencia</blockquote>
#+end_src
*** Abreviatura y acrónimo
- Para abreviatura utilizamos =<abbr>=
- Para un acrónimo o uso de siglas lo hacemos con =<acronym>=
- En el atributo =title= podemos indicar el significado de esa abreviatura o acrónimo
#+begin_src html
  <p>El <acronym title="World Wide Web Consortium">W3C</acronym> es quien define el estándar <abbr title="HyperText Markup Language">HTML</abbr> 
#+end_src
*** Definición
- Para indicar una definición lo hacemos con =<dfn>=
- El elemento que lo encierra es el contexto de la definición
  #+begin_src html
<p>A <dfn id="def-validator">validator</dfn> is a program that checks for syntax errors in code or documents.</p>
  #+end_src
*** Inserción y borrado
- Cuando queremos borrar o modificar contenido en una publicación realizada
- Con =<ins>= indicamos la modificicación y quedará subrayado
- Con =<del>= indicamos el borrado y quedará tachado
- En el atributo =cite= puede indicar la fuente por la que se realiza tal borrado o modificación
- Y con  =datetime= la fecha de la modificación
#+reveal: split:t
#+begin_src html
<p>El origen del terremoto fue en la localidad de <del cite="https://www.elperiodicomediterraneo.com/comarcas/2017/12/16/burriana-registra-terremoto-durante-madrugada-41423109.html">Burriana</del> <ins>Lorca</ins>.</p>
#+end_src
*** Tiempo
- El elemento =<time>= representa un periodo específico de tiempo
- Con el atributo =datetime= hacemos que este elemento sea /machine-readable/
- Esto es una mejora para los resultados de motores de búsqueda o para funciones personalizadas como recordatorios
- Ver formatos válidos de indicar el tiempo [[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time#valid_datetime_values][aquí]]
#+begin_src html
<p>Celebramos el 40ª aniversario el próximo <time datetime="2018-07-07">7 de julio</time> en Toledo</p>
<p>El concierto empieza a las <time datetime="20:00">20:00</time> y podrás disfrutarlo durante<time datetime="PT2H30M">2h 30m</time>.</p>
#+end_src
** Preformateado de texto
- Cuando queremos mostrar el texto preformateado y escrito tal y como lo hacemos en el HTML
- Se suele renderizar en el navegador con una fuente monoespaciada
- Se respetan los espacios en blanco
- Escape de caracter: =<= (&lt), =>= (&gt), =&= (&amp), ="= (&quot) [[https://html.spec.whatwg.org/multipage/named-characters.html#named-character-references][Ver más aquí]]
#+reveal: split:t
#+begin_src html
  <pre>
      ___________________________
  &lt; I'm an expert in my field. &gt;
      ---------------------------
          \   ^__^
           \  (oo)\_______
              (__)\       )\/\
                  ||----w |
                  ||     ||
  </pre>
#+end_src
** Mostrar código
- Para mostrar código podemos hacerlo con el elemento =<code>=
- Normalmente se renderiza con fuente monoespaciada
#+begin_src html
<p>The function <code>selectAll()</code> highlights all the text in the input field so the user can, for example, copy or delete the text.</p>
#+end_src
- Si queremos mostrar multiples líneas de código podemos encerrarlo dentro de =<pre>=
#+begin_src html
  <pre>
    <code>
       body {
         padding: 0;
         margin: 0;
         box-sizing: border-box;
       }
    </code>
  </pre>
#+end_src
** Otros enlaces
- Para enlazar con un script de javascript por ejemplo, podemos hacerlo con el elemento =<script>=
#+begin_src html
<head>
  <script type="text/javascript" src="http://www.ejemplo.com/js/inicializar.js"></script>
</head>
#+end_src
- Con =<script>= también podemos escribir el código /JS/ directamente en nuestro /HTML/
#+begin_src html
  <script type="text/javascript">
    window.onload = function() { alert("La página se ha cargado completamente"); }
  </script>
#+end_src
#+reveal: split
- Si queremos enlazar con otros recursos, como por ejemplo una hoja de estilo /CSS/, podemos hacerlo con el elemento =<link>=
#+begin_src html
<head>
  <link rel="stylesheet" type="text/css" href="/css/style.css" />
</head>
#+end_src
* Para el próximo día :noexport:
- Para la próxima sesión trae algún ejemplo de web cuyo propósito sea la comunicación de datos
- Puede ser una noticia, artículo, proyecto personal, etc.
- Inspecciona un poco cómo está hecha por dentro
* CSS
:PROPERTIES:
:reveal_background: #264de4
:END:
- /CSS/ (Hojas de estilo en cascada) es el código que utilizamos para dar estilo a la web.
- Podemos dar color, tamaño al texto o el fondo de elementos, la maquetación de los mismos, etc.
- No es un lenguaje de programación ni de marcado. Es un lenguaje de hojas de estilo
- Permite aplicar estilos de manera selectiva o "en cascada" a elementos en el HTML
#+reveal: split
Si queremos cambiar el color de texto a todos los párrafos:
#+begin_src css
p {
  color: red;
}
#+end_src
#+reveal: split
Intenta averiguar qué color tendrá la frase "Hola Mundo!"
#+REVEAL_HTML: <div class="column" style="float:left; width: 45%">
#+begin_src html
<body>
  <div class="container">
    <p class="text">Hola mundo</p>
  </div>
</body>
#+end_src
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div class="column" style="float:right; width: 45%">
#+begin_src css
body {
  color: blue;
}

.container {
  color: red;
}

p {
  color: green;
}
#+end_src
#+REVEAL_HTML: </div>
** Configuración
- Para que tengan efectos estos estilos tenemos que guardarlo en un archivo =.css=
- Y además tendremos que vincular este archivo desde el html entre las etiquetas =<head>= y =</head>=
#+begin_src html 
  <link href="assets/css/style.css" rel="stylesheet" type="text/css">
#+end_src
#+reveal: split:t
- También puede ser una hoja de estilo interna y que se indique dentro de las etiquetas =<style></style>= dentro del html
- O puede ser un estilo en línea que sólo afectan a un elemento HTML, aunque no es muy recomendable trabajar así
#+begin_src html
<h1 style="color: blue;background-color: yellow;border: 1px solid black;">¡Hola mundo!</h1>
#+end_src
** Estructura
#+attr_html: :height 300px :display block
#+caption: Partes de una regla CSS. Fuente: [[https://developer.mozilla.org/es/docs/Learn/Getting_started_with_the_web/CSS_basics][Mozilla]]
https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics/css-declaration-small.png
** Sintaxis
- Cada una de las reglas deben estar encapsuladas entre llaves "={}="
- Usar los dos puntos "=:=" para separar la propiedad de su valor
- Usar el punto y coma "=;=" para separar una declaración de la siguiente
#+begin_src css
p {
  color: red;
  width: 500px;
  border: 1px solid black;
}
#+end_src
#+reveal: split
Para seleccionar varios elementos
#+begin_src css
p, li, h1 {
  color: red;
}
#+end_src
** Tipos de selectores
- De elemento: =p=, =h1=, =ul=, etc.
- De identificación: =#mi-id=
- De clase: =.mi-clase=
- De atributo: =img[src]=
- De pseudoclase, sólo cuando esté en el estado especificado: =a:hover=
*** Por Operadores de combinación
- Descendentes: =div span=
- De elementos hijo: =article > p=
- De elementos hermanos adyacentes: =h1 + p=
- general de elementos hermanos: =h1 ~ p= 
** Cajas (Box model)
- Podemos pensar los elementos HTML como cajas apiladas una sobre otra
- Cada caja tiene una serie de propiedades como estas:
  - =padding= (relleno), el espacio alrededor del contenido
  - =border= (marco), la línea que se encuentra fuera del relleno
  - =margin= (margen), el espacio fuera del elemento que lo separa de los demás
#+reveal: split
#+attr_html: :height 300px :display block
#+caption: Ejemplo de propiedades CSS. Fuente: [[https://developer.mozilla.org/es/docs/Learn/Getting_started_with_the_web/CSS_basics#cajas_cajas_todo_se_trata_de_cajas][Mozilla]]
https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics/box-model.png
** Fuentes
- Para dar estilo al texto también podemos hacerlo utilizando diferentes fuentes o tipografías
- Para utilizar una fuente desde CSS lo podemos hacer con la propiedad =font-family=
- El navegador sólo podrá utilizar las tipografías que tengamos instaladas en el sistema
- Existe un listado de [[https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Fundamentals#font_families][fuentes web seguras]]
#+begin_src css
p {
  font-family: arial;
}
#+end_src
** Webfonts
Si queremos utilizar una tipografía online o webfont, tenemos varios métodos:
 - Con =@font-face= (CSS)
#+begin_src css
  @font-face {
    font-family: myFont;
    src: url("url de la webfont");
    font-weight: bold; 
  }
  
  p {
      font-family: myFont;
  }
#+end_src
#+reveal: split:t
  - Con =@import= Es el metodo para importar otros recursos locales o externos. Tiene que ir al inicio del CSS
#+begin_src css
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@1,500&display=swap');
p {
    font-family: 'Roboto', sans-serif;
}
#+end_src
#+reveal: split:t
  - Con =<link>= (HTML)
#+begin_src html
 <link rel="stylesheet" media="screen" href="https://fontlibrary.org//face/futura-renner" type="text/css"/> 
#+end_src
#+begin_src css
 p {
   font-family: 'FuturaRennerRegular';
   font-weight: normal;
   font-style: normal;
}
#+end_src
* Bootstrap
:PROPERTIES:
:reveal_background: #6F2BF5
:END:
- Bootstrap es un /framework/ de diseño web y es de código abierto
- Contiene plantillas de diseño web: tipografías, botones, formularios, menús, etc.
- Estas plantillas son básicamente HTML y CSS, y algunos componentes requieren de JS
- Desarrollado desde la estrategia /mobile first/
** Empezamos!
- Primero comenzamos con el index.html
#+begin_src html
<!doctype html>
<html lang="en">
  ...
</html>
#+end_src
** Queremos un diseño responsivo
- Con la etiqueta viewport meta indicamos que se adapte para móviles
#+begin_src html
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <title>Mi página en Bootstrap</title>
    </head>
#+end_src
- Hacemos una prueba para ver la diferencia.
** TODO Enlazamos el CSS y JS de Bootstrap
- Vamos a enlazar a unos archivos CSS y JS en local descargados en la raiz de nuestro proyecto
- Primero indicamos el enlace al archivo CSS dentro de =<head>=
#+begin_src html

#+end_src

* TODO JavaScript
:PROPERTIES:
:reveal_background: #f0db4f
:END:
* Manuales / Docs
- https://developer.mozilla.org/es/docs/Learn/HTML
- https://www.w3schools.com/html/default.asp 
* Siguiente ->                                                     :noexport:
   :PROPERTIES:
   :reveal_background: #FFCC00
   :END:
#+REVEAL_HTML: <a href="https://julianprz.gitlab.io/programacion-creativa-21-22/main/docs/01_Processing/03-formas-simples-personalizadas.html" class="r-fit-text" target="_blank">3-Formas simples / personalizadas</h2>
* Template                                                         :noexport:
** Índice
# Generar TOC
# org-reveal-manual-toc
** Indice 2 columnas
#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
#+REVEAL_HTML: </div>
** 2 Columnas imagen
#+REVEAL_HTML: <div class="column" style="float:left; width: 45%">
#+attr_html: :heigh 200px :display block
#+caption: 
[[../../img/02/]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 45%">
#+attr_html: :height 290px :display block
#+CAPTION:
[[../../img/02/]]
#+REVEAL_HTML: </div>
** 2 Columnas código
#+REVEAL_HTML: <div class="column" style="float:left; width: 45%">
#+begin_src arduino
#+end_src
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 45%">
#+begin_src arduino
#+end_src
#+REVEAL_HTML: </div>
 
** 3 Columnas
#+REVEAL_HTML: <div class="column" style="float:left; width: 33%">
#+attr_html: :heigh 200px :display block
#+caption: 
[[../../img/]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 33%">
#+attr_html: :height 290px :display block
#+CAPTION:
[[../../img/]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 33%">
#+attr_html: :height 290px :display block
#+CAPTION:
[[../../img/]]
#+REVEAL_HTML: </div>

** 1 imagen
#+attr_html: :height 400px :display block
#+caption: 
[[../../img/02/]]

** SVG
#+HTML: <img src="https://processing.org/a9c1aea53d4f4788062d226affba4b4d/objects.svg" width="500"/>
** export processing code                                         :noexport:
#+begin_src processing :tangle no ../../code/04/sketch_00_example/sketch_00_example.pde :mkdirp yes

#+end_src
# org-babel-tangle
# Tangle the current file. Bound to C-c C-v t.
# Tangle the current code block. C-u C-c C-v C-t
# With prefix argument only tangle the current code block.

** inline processing code                                         :noexport:
# src_processing[:exports code]{;}

** Symbols
- \downarrow
  
* Contents                                                         :noexport:
** Sistemas interactivos
- https://www.encyclopedia.com/computing/news-wires-white-papers-and-books/interactive-systems
- 
** Web
*** Responsive Design
- https://mdo.github.io/table-grid/
** Scrollytelling
** Publicación
** Accesibilidad
- https://amarachijohnson.com/a-beginners-guide-to-web-accessibility-ckelka23j00cd8cs10h24byf7?utm_content=139523215&utm_medium=social&hss_channel=tw-1120244738&utm_source=twitter&utm_campaign=accessibility
- WAI: https://www.w3.org/WAI/
- ARIA: Accesible Rich Internet Applications
  - https://developer.mozilla.org/es/docs/Web/Accessibility/ARIA
  - https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles
  - https://briefs.video/videos/what-is-aria-even-for/
  - 
- Acces.: https://uxdesign.cc/designing-for-accessibility-is-not-that-hard-c04cc4779d94
- Color
  - https://contrast-ratio.com/
  - https://contrastchecker.com/
  - https://stephaniewalter.design/blog/color-accessibility-tools-resources-to-design-inclusive-products/
  - https://jxnblk.github.io/colorable/demos/matrix/
  - https://contrast-ratio.com/
- Imagen:
  - Alt
- Focus state
  - 
- Etiquetas en los forms
- ScreeReaders
  - https://www.nvaccess.org/download/
** Universalidad
- https://www.amberscript.com/es/blog/internet-universalidad-definicion/
** SEO
- https://cards-dev.twitter.com/validator
- https://developers.facebook.com/tools/debug
- https://developers.google.com/search/docs/advanced/structured-data0
- https://ogp.me/
- 
** UX
- https://lawsofux.com/
** 
